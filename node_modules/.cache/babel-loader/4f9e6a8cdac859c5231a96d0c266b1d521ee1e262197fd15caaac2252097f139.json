{"ast":null,"code":"var _jsxFileName = \"/Users/mafiqsb/amazona/frontend/src/screens/SignupScreen.js\",\n  _s = $RefreshSig$();\n// import Axios from 'axios';\n// import { Link, useLocation, useNavigate } from 'react-router-dom';\n// import Container from 'react-bootstrap/Container';\n// import Form from 'react-bootstrap/Form';\n// import Button from 'react-bootstrap/Button';\n// import { Helmet } from 'react-helmet-async';\n// import { useContext, useEffect, useState } from 'react';\n// import { Store } from '../Store';\n// import { toast } from 'react-toastify';\n// import { getError } from '../utils';\n\n// export default function SignupScreen() {\n//   const navigate = useNavigate();\n//   const { search } = useLocation();\n//   const redirectInUrl = new URLSearchParams(search).get('redirect');\n//   const redirect = redirectInUrl ? redirectInUrl : '/';\n\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n\n//   const { state, dispatch: ctxDispatch } = useContext(Store);\n//   const { userInfo } = state;\n//   const submitHandler = async (e) => {\n//     e.preventDefault();\n//     if (password !== confirmPassword) {\n//       toast.error('Passwords do not match');\n//       return;\n//     }\n//     try {\n//       const { data } = await Axios.post('/api/users/signup', {\n//         name,\n//         email,\n//         password,\n//       });\n//       ctxDispatch({ type: 'USER_SIGNIN', payload: data });\n//       localStorage.setItem('userInfo', JSON.stringify(data));\n//       navigate(redirect || '/');\n//     } catch (err) {\n//       toast.error(getError(err));\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (userInfo) {\n//       navigate(redirect);\n//     }\n//   }, [navigate, redirect, userInfo]);\n\n//   return (\n//     <Container className=\"small-container\">\n//       <Helmet>\n//         <title>Sign Up</title>\n//       </Helmet>\n//       <h1 className=\"my-3\">Sign Up</h1>\n//       <Form onSubmit={submitHandler}>\n//         <Form.Group className=\"mb-3\" controlId=\"name\">\n//           <Form.Label>Name</Form.Label>\n//           <Form.Control onChange={(e) => setName(e.target.value)} required />\n//         </Form.Group>\n\n//         <Form.Group className=\"mb-3\" controlId=\"email\">\n//           <Form.Label>Email</Form.Label>\n//           <Form.Control\n//             type=\"email\"\n//             required\n//             onChange={(e) => setEmail(e.target.value)}\n//           />\n//         </Form.Group>\n//         <Form.Group className=\"mb-3\" controlId=\"password\">\n//           <Form.Label>Password</Form.Label>\n//           <Form.Control\n//             type=\"password\"\n//             required\n//             onChange={(e) => setPassword(e.target.value)}\n//           />\n//           <Form.Group className=\"mb-3\" controlId=\"confirmPassword\">\n//             <Form.Label>Confirm Password</Form.Label>\n//             <Form.Control\n//               type=\"password\"\n//               onChange={(e) => setConfirmPassword(e.target.value)}\n//               required\n//             />\n//           </Form.Group>\n//         </Form.Group>\n//         <div className=\"mb-3\">\n//           <Button type=\"submit\">Sign Up</Button>\n//         </div>\n//         <div className=\"mb-3\">\n//           Already have an account?{' '}\n//           <Link to={`/signin?redirect=${redirect}`}>Sign-In</Link>\n//         </div>\n//       </Form>\n//     </Container>\n//   );\n// }\n\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/esm/Button';\nimport Container from 'react-bootstrap/esm/Container';\nimport Form from 'react-bootstrap/Form';\nimport { Helmet } from 'react-helmet-async';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignupScreen() {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"small-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"confirmPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          onChange: e => setConfirmPassword(e.target.event),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(SignupScreen, \"NYiFi2C6DAgt8oizGdr79b3ECNU=\");\n_c = SignupScreen;\nvar _c;\n$RefreshReg$(_c, \"SignupScreen\");","map":{"version":3,"names":["React","useState","Button","Container","Form","Helmet","jsxDEV","_jsxDEV","SignupScreen","_s","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","onChange","e","target","value","required","type","event","_c","$RefreshReg$"],"sources":["/Users/mafiqsb/amazona/frontend/src/screens/SignupScreen.js"],"sourcesContent":["// import Axios from 'axios';\n// import { Link, useLocation, useNavigate } from 'react-router-dom';\n// import Container from 'react-bootstrap/Container';\n// import Form from 'react-bootstrap/Form';\n// import Button from 'react-bootstrap/Button';\n// import { Helmet } from 'react-helmet-async';\n// import { useContext, useEffect, useState } from 'react';\n// import { Store } from '../Store';\n// import { toast } from 'react-toastify';\n// import { getError } from '../utils';\n\n// export default function SignupScreen() {\n//   const navigate = useNavigate();\n//   const { search } = useLocation();\n//   const redirectInUrl = new URLSearchParams(search).get('redirect');\n//   const redirect = redirectInUrl ? redirectInUrl : '/';\n\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n\n//   const { state, dispatch: ctxDispatch } = useContext(Store);\n//   const { userInfo } = state;\n//   const submitHandler = async (e) => {\n//     e.preventDefault();\n//     if (password !== confirmPassword) {\n//       toast.error('Passwords do not match');\n//       return;\n//     }\n//     try {\n//       const { data } = await Axios.post('/api/users/signup', {\n//         name,\n//         email,\n//         password,\n//       });\n//       ctxDispatch({ type: 'USER_SIGNIN', payload: data });\n//       localStorage.setItem('userInfo', JSON.stringify(data));\n//       navigate(redirect || '/');\n//     } catch (err) {\n//       toast.error(getError(err));\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (userInfo) {\n//       navigate(redirect);\n//     }\n//   }, [navigate, redirect, userInfo]);\n\n//   return (\n//     <Container className=\"small-container\">\n//       <Helmet>\n//         <title>Sign Up</title>\n//       </Helmet>\n//       <h1 className=\"my-3\">Sign Up</h1>\n//       <Form onSubmit={submitHandler}>\n//         <Form.Group className=\"mb-3\" controlId=\"name\">\n//           <Form.Label>Name</Form.Label>\n//           <Form.Control onChange={(e) => setName(e.target.value)} required />\n//         </Form.Group>\n\n//         <Form.Group className=\"mb-3\" controlId=\"email\">\n//           <Form.Label>Email</Form.Label>\n//           <Form.Control\n//             type=\"email\"\n//             required\n//             onChange={(e) => setEmail(e.target.value)}\n//           />\n//         </Form.Group>\n//         <Form.Group className=\"mb-3\" controlId=\"password\">\n//           <Form.Label>Password</Form.Label>\n//           <Form.Control\n//             type=\"password\"\n//             required\n//             onChange={(e) => setPassword(e.target.value)}\n//           />\n//           <Form.Group className=\"mb-3\" controlId=\"confirmPassword\">\n//             <Form.Label>Confirm Password</Form.Label>\n//             <Form.Control\n//               type=\"password\"\n//               onChange={(e) => setConfirmPassword(e.target.value)}\n//               required\n//             />\n//           </Form.Group>\n//         </Form.Group>\n//         <div className=\"mb-3\">\n//           <Button type=\"submit\">Sign Up</Button>\n//         </div>\n//         <div className=\"mb-3\">\n//           Already have an account?{' '}\n//           <Link to={`/signin?redirect=${redirect}`}>Sign-In</Link>\n//         </div>\n//       </Form>\n//     </Container>\n//   );\n// }\n\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/esm/Button';\nimport Container from 'react-bootstrap/esm/Container';\nimport Form from 'react-bootstrap/Form';\nimport { Helmet } from 'react-helmet-async';\n\nexport default function SignupScreen() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  return (\n    <Container className=\"small-container\">\n      <Helmet>\n        <title>Sign Up</title>\n      </Helmet>\n      <h1>Sign Up</h1>\n      <Form>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control onChange={(e) => setName(e.target.value)} required />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"email\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setConfirmPassword(e.target.event)}\n            required\n          />\n        </Form.Group>\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Sign Up</Button>\n        </div>\n      </Form>\n    </Container>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}