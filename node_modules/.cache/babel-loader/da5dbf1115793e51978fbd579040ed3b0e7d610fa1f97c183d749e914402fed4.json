{"ast":null,"code":"var _jsxFileName = \"/Users/mafiqsb/amazona/frontend/src/Store.js\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Store = /*#__PURE__*/createContext(); //provides a way to share data between\n// components without having to pass props down\n// through the component tree.\n\nconst initialState = {\n  cart: {\n    cartItems: []\n  }\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'CART_ADD_ITEM':\n      // add to cart\n      return {\n        ...state,\n        cart: {\n          ...state.cart,\n          cartItems: [...state.cart.cartItems, action.payload]\n        }\n      };\n    default:\n      return state;\n  }\n}\nexport function StoreProvider(props) {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = {\n    state,\n    dispatch\n  };\n  return /*#__PURE__*/_jsxDEV(Store.Provider, {\n    value: value,\n    children: [props.children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n}\n//StoreProvider() = tempat simpanan\n//The Store.Provider component is used to\n// provide the value prop to all descendant components\n// that consume the Store context. The props.children syntax\n// is used to pass any child components of the StoreProvider\n// component to the Store.Provider component.\n_s(StoreProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = StoreProvider;\nvar _c;\n$RefreshReg$(_c, \"StoreProvider\");","map":{"version":3,"names":["createContext","useReducer","jsxDEV","_jsxDEV","Store","initialState","cart","cartItems","reducer","state","action","type","payload","StoreProvider","props","_s","dispatch","value","Provider","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mafiqsb/amazona/frontend/src/Store.js"],"sourcesContent":["import { createContext, useReducer } from 'react';\n\nexport const Store = createContext(); //provides a way to share data between\n// components without having to pass props down\n// through the component tree.\n\nconst initialState = {\n  cart: {\n    cartItems: [],\n  },\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'CART_ADD_ITEM':\n      // add to cart\n      return {\n        ...state,\n        cart: {\n          ...state.cart,\n          cartItems: [...state.cart.cartItems, action.payload],\n        },\n      };\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = { state, dispatch };\n  return <Store.Provider value={value}>{props.children} </Store.Provider>;\n}\n//StoreProvider() = tempat simpanan\n//The Store.Provider component is used to\n// provide the value prop to all descendant components\n// that consume the Store context. The props.children syntax\n// is used to pass any child components of the StoreProvider\n// component to the Store.Provider component.\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,OAAO,MAAMC,KAAK,gBAAGJ,aAAa,EAAE,CAAC,CAAC;AACtC;AACA;;AAEA,MAAMK,YAAY,GAAG;EACnBC,IAAI,EAAE;IACJC,SAAS,EAAE;EACb;AACF,CAAC;AACD,SAASC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC9B,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,eAAe;MAClB;MACA,OAAO;QACL,GAAGF,KAAK;QACRH,IAAI,EAAE;UACJ,GAAGG,KAAK,CAACH,IAAI;UACbC,SAAS,EAAE,CAAC,GAAGE,KAAK,CAACH,IAAI,CAACC,SAAS,EAAEG,MAAM,CAACE,OAAO;QACrD;MACF,CAAC;IACH;MACE,OAAOH,KAAK;EAAC;AAEnB;AAEA,OAAO,SAASI,aAAaA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACN,KAAK,EAAEO,QAAQ,CAAC,GAAGf,UAAU,CAACO,OAAO,EAAEH,YAAY,CAAC;EAC3D,MAAMY,KAAK,GAAG;IAAER,KAAK;IAAEO;EAAS,CAAC;EACjC,oBAAOb,OAAA,CAACC,KAAK,CAACc,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAE,QAAA,GAAEL,KAAK,CAACK,QAAQ,EAAC,GAAC;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAiB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AAAAR,EAAA,CAVgBF,aAAa;AAAAW,EAAA,GAAbX,aAAa;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}