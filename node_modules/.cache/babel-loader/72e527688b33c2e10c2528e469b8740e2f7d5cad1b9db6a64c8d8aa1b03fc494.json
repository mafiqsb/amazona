{"ast":null,"code":"var _jsxFileName = \"/Users/mafiqsb/amazona/frontend/src/Store.js\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer } from 'react';\n\n// export const Store = createContext(); //provides a way to share data between\n// // components without having to pass props down\n// // through the component tree.\n\n// const initialState = {\n//   cart: {\n//     cartItems: [],\n//   },\n// };\n// function reducer(state, action) {\n//   switch (action.type) {\n//     case 'CART_ADD_ITEM':\n//       // add to cart\n//       const newItem = action.payload;\n//       const existItem = state.cart.cartItems.find(\n//         (item) => item._id === newItem._id\n//       );\n//       const cartItems = existItem\n//         ? state.cart.cartItems.map(\n//             (item) => (item._id === existItem._id ? newItem : item) //newItem update quantity\n//           )\n//         : [...state.cart.cartItems, newItem];\n//       return { ...state, cart: { ...state.cart, cartItems } };\n//     //   return {\n//     //     ...state,\n//     //     cart: {\n//     //       ...state.cart,\n//     //       cartItems: [...state.cart.cartItems, action.payload],\n//     //     },\n//     //   };\n//     default:\n//       return state;\n//   }\n// }\n\n// export function StoreProvider(props) {\n//   const [state, dispatch] = useReducer(reducer, initialState);\n//   const value = { state, dispatch };\n//   return <Store.Provider value={value}>{props.children} </Store.Provider>;\n// }\n//StoreProvider() = tempat simpanan\n//The Store.Provider component is used to\n// provide the value prop to all descendant components\n// that consume the Store context. The props.children syntax\n// is used to pass any child components of the StoreProvider\n// component to the Store.Provider component.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Store = /*#__PURE__*/createContext();\nconst initialState = {\n  cart: {\n    cartItems: []\n  }\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'CART_ADD_ITEM':\n      return {\n        ...state,\n        case: {\n          ...state.case,\n          cartItems: [...state.case.cartItems, action.payload]\n        }\n      };\n    default:\n      return state;\n  }\n};\nexport function StoreProvider(props) {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(Store.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 10\n  }, this);\n}\n_s(StoreProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = StoreProvider;\nvar _c;\n$RefreshReg$(_c, \"StoreProvider\");","map":{"version":3,"names":["createContext","useReducer","jsxDEV","_jsxDEV","Store","initialState","cart","cartItems","reducer","state","action","type","case","payload","StoreProvider","props","_s","dispatch","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mafiqsb/amazona/frontend/src/Store.js"],"sourcesContent":["import { createContext, useReducer } from 'react';\n\n// export const Store = createContext(); //provides a way to share data between\n// // components without having to pass props down\n// // through the component tree.\n\n// const initialState = {\n//   cart: {\n//     cartItems: [],\n//   },\n// };\n// function reducer(state, action) {\n//   switch (action.type) {\n//     case 'CART_ADD_ITEM':\n//       // add to cart\n//       const newItem = action.payload;\n//       const existItem = state.cart.cartItems.find(\n//         (item) => item._id === newItem._id\n//       );\n//       const cartItems = existItem\n//         ? state.cart.cartItems.map(\n//             (item) => (item._id === existItem._id ? newItem : item) //newItem update quantity\n//           )\n//         : [...state.cart.cartItems, newItem];\n//       return { ...state, cart: { ...state.cart, cartItems } };\n//     //   return {\n//     //     ...state,\n//     //     cart: {\n//     //       ...state.cart,\n//     //       cartItems: [...state.cart.cartItems, action.payload],\n//     //     },\n//     //   };\n//     default:\n//       return state;\n//   }\n// }\n\n// export function StoreProvider(props) {\n//   const [state, dispatch] = useReducer(reducer, initialState);\n//   const value = { state, dispatch };\n//   return <Store.Provider value={value}>{props.children} </Store.Provider>;\n// }\n//StoreProvider() = tempat simpanan\n//The Store.Provider component is used to\n// provide the value prop to all descendant components\n// that consume the Store context. The props.children syntax\n// is used to pass any child components of the StoreProvider\n// component to the Store.Provider component.\n\nexport const Store = createContext();\n\nconst initialState = {\n  cart: {\n    cartItems: [],\n  },\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'CART_ADD_ITEM':\n      return {\n        ...state,\n        case: {\n          ...state.case,\n          cartItems: [...state.case.cartItems, action.payload],\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport function StoreProvider(props) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return <Store.Provider value={value}>{props.children}</Store.Provider>;\n}\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;;AAEjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,MAAMC,KAAK,gBAAGJ,aAAa,EAAE;AAEpC,MAAMK,YAAY,GAAG;EACnBC,IAAI,EAAE;IACJC,SAAS,EAAE;EACb;AACF,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,eAAe;MAClB,OAAO;QACL,GAAGF,KAAK;QACRG,IAAI,EAAE;UACJ,GAAGH,KAAK,CAACG,IAAI;UACbL,SAAS,EAAE,CAAC,GAAGE,KAAK,CAACG,IAAI,CAACL,SAAS,EAAEG,MAAM,CAACG,OAAO;QACrD;MACF,CAAC;IACH;MACE,OAAOJ,KAAK;EAAC;AAEnB,CAAC;AAED,OAAO,SAASK,aAAaA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACP,KAAK,EAAEQ,QAAQ,CAAC,GAAGhB,UAAU,CAACO,OAAO,EAAEH,YAAY,CAAC;EAE3D,oBAAOF,OAAA,CAACC,KAAK,CAACc,QAAQ;IAACC,KAAK,EAAEA,KAAM;IAAAC,QAAA,EAAEL,KAAK,CAACK;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAkB;AACxE;AAACR,EAAA,CAJeF,aAAa;AAAAW,EAAA,GAAbX,aAAa;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}